{"id":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","dependencies":[{"name":"C:\\Users\\Owner\\Desktop\\School\\CS\\TCSS 491 - Comp Worlds\\AaPhaser\\package.json","includedInParent":true,"mtime":1551484416169},{"name":"C:\\Users\\Owner\\Desktop\\School\\CS\\TCSS 491 - Comp Worlds\\AaPhaser\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1551484415991}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * The File Load Error Event.\r\n * \r\n * This event is dispatched by the Loader Plugin when a file fails to load.\r\n * \r\n * Listen to it from a Scene using: `this.load.on('loaderror', listener)`.\r\n *\r\n * @event Phaser.Loader.Events#FILE_LOAD_ERROR\r\n * \r\n * @param {Phaser.Loader.File} file - A reference to the File which errored during load.\r\n */\r\nmodule.exports = 'loaderror';\r\n","map":{"mappings":[{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}}],"sources":{"node_modules/phaser/src/loader/events/FILE_LOAD_ERROR_EVENT.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * The File Load Error Event.\r\n * \r\n * This event is dispatched by the Loader Plugin when a file fails to load.\r\n * \r\n * Listen to it from a Scene using: `this.load.on('loaderror', listener)`.\r\n *\r\n * @event Phaser.Loader.Events#FILE_LOAD_ERROR\r\n * \r\n * @param {Phaser.Loader.File} file - A reference to the File which errored during load.\r\n */\r\nmodule.exports = 'loaderror';\r\n"},"lineCount":19}},"hash":"af5c770f90f01151b6862f10e9962477","cacheData":{"env":{}}}